{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/ModalBlock.js\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Context } from '..';\nimport { deleteNote } from '../http/noteAPI';\nimport { deleteAccount } from '../http/userAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalBlock = observer(_c = _s(() => {\n  _s();\n\n  const {\n    alert\n  } = useContext(Context);\n  const {\n    note\n  } = useContext(Context);\n  const {\n    user\n  } = useContext(Context);\n\n  const handleClose = () => alert.setModalVisible(false);\n\n  const onRemove = async () => {\n    switch (alert.type) {\n      case 'user':\n        await deleteNote(alert.modalId);\n        note.removeNote(alert.modalId);\n        alert.setModalVisible(false);\n        break;\n\n      case 'user':\n        await deleteAccount(alert.modalId);\n        user.deleteUser(alert.modalId);\n        alert.setModalVisible(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: alert.modalVisible,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: alert.text || \"Удаляем, да?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"\\u0415\\u0449\\u0435 \\u043F\\u043E\\u0434\\u0443\\u043C\\u0430\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: onRemove,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"86IYwS5/1kKaRjVNJ0xSrBbwq8c=\"));\n_c2 = ModalBlock;\nexport default ModalBlock;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalBlock$observer\");\n$RefreshReg$(_c2, \"ModalBlock\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/ModalBlock.js"],"names":["observer","React","useContext","Modal","Button","Context","deleteNote","deleteAccount","ModalBlock","alert","note","user","handleClose","setModalVisible","onRemove","type","modalId","removeNote","deleteUser","modalVisible","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AAEA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;;;AAEA,MAAMC,UAAU,GAAGR,QAAQ,SAAG,MAAM;AAAA;;AAEhC,QAAM;AAACS,IAAAA;AAAD,MAAUP,UAAU,CAACG,OAAD,CAA1B;AACA,QAAM;AAACK,IAAAA;AAAD,MAASR,UAAU,CAACG,OAAD,CAAzB;AACA,QAAM;AAACM,IAAAA;AAAD,MAAST,UAAU,CAACG,OAAD,CAAzB;;AAEA,QAAMO,WAAW,GAAG,MAAMH,KAAK,CAACI,eAAN,CAAsB,KAAtB,CAA1B;;AAEA,QAAMC,QAAQ,GAAG,YAAY;AACzB,YAAQL,KAAK,CAACM,IAAd;AACI,WAAK,MAAL;AACI,cAAMT,UAAU,CAACG,KAAK,CAACO,OAAP,CAAhB;AACAN,QAAAA,IAAI,CAACO,UAAL,CAAgBR,KAAK,CAACO,OAAtB;AACAP,QAAAA,KAAK,CAACI,eAAN,CAAsB,KAAtB;AACA;;AACJ,WAAK,MAAL;AACI,cAAMN,aAAa,CAACE,KAAK,CAACO,OAAP,CAAnB;AACAL,QAAAA,IAAI,CAACO,UAAL,CAAgBT,KAAK,CAACO,OAAtB;AACAP,QAAAA,KAAK,CAACI,eAAN,CAAsB,KAAtB;AACA;;AACJ;AACI;AAZR;AAcH,GAfD;;AAiBA,sBACI;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEJ,KAAK,CAACU,YAAnB;AAAiC,MAAA,MAAM,EAAEP,WAAzC;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA,oBAAcH,KAAK,CAACW,IAAN,IAAc;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,MAAP;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAER,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEE,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiBH,CA1C0B,kCAA3B;MAAMN,U;AA4CN,eAAeA,UAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\nimport React, {useContext} from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nimport { Context } from '..';\nimport { deleteNote } from '../http/noteAPI';\nimport { deleteAccount } from '../http/userAPI';\n\nconst ModalBlock = observer ( () => {\n\n    const {alert} = useContext(Context)\n    const {note} = useContext(Context)\n    const {user} = useContext(Context)\n  \n    const handleClose = () => alert.setModalVisible(false);\n\n    const onRemove = async () => {\n        switch (alert.type) {\n            case 'user':\n                await deleteNote(alert.modalId)\n                note.removeNote(alert.modalId)\n                alert.setModalVisible(false)        \n                break;\n            case 'user':\n                await deleteAccount(alert.modalId)\n                user.deleteUser(alert.modalId)\n                alert.setModalVisible(false)        \n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <>\n            <Modal show={alert.modalVisible} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{alert.text || \"Удаляем, да?\"}</Modal.Title>\n                </Modal.Header>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Еще подумаю\n                    </Button>\n                    <Button variant=\"primary\" onClick={onRemove}>\n                        Удалить\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n});\n\nexport default ModalBlock;"]},"metadata":{},"sourceType":"module"}