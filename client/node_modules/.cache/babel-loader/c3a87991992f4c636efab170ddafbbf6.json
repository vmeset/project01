{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/SortBlock.js\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useState, useEffect } from 'react';\nimport { Button, ListGroup, Form, Row, Col } from 'react-bootstrap';\nimport _ from 'lodash';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Note from '../components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortBlock = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    notes\n  } = _ref;\n  const [searchVal, setSearchVal] = useState(\"\");\n  const [sort, setSort] = useState('asc');\n  const [usNotes, setUsNotes] = useState([]);\n  useEffect(() => {\n    setUsNotes(notes); // eslint-disable-next-line\n  }, [notes]);\n\n  const onSort = type => {\n    const copyNotes = notes.concat();\n    const sortType = sort === 'asc' ? 'desc' : 'asc';\n\n    const orderedNotes = _.orderBy(copyNotes, type, sortType);\n\n    setSort(sortType);\n    setUsNotes(orderedNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: 4,\n        className: \"mb-3 pt-1\",\n        children: [\"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: 'outline-dark',\n          className: \"ms-2 btn-sm\",\n          onClick: () => {\n            onSort(\"title\");\n          },\n          children: \"\\u043F\\u043E \\u0438\\u043C\\u0435\\u043D\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: 'outline-dark',\n          className: \"ms-2 btn-sm\",\n          onClick: () => {\n            onSort(\"date\");\n          },\n          children: \"\\u043F\\u043E \\u0434\\u0430\\u0442\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"auto\",\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"\\u043F\\u043E\\u0438\\u0441\\u043A\",\n          onChange: e => setSearchVal(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      className: \"note-list\",\n      children: usNotes.filter(val => {\n        if (searchVal === \"\") {\n          return val;\n        } else if (val.title.toLowerCase().includes(searchVal.toLowerCase())) {\n          return val;\n        }\n      }).map(note => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: 'note',\n        timeout: 1000,\n        children: /*#__PURE__*/_jsxDEV(Note, {\n          notka: note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}, \"gHjwldl5Ac1Jlk9PujICHjhn9NI=\"));\n_c2 = SortBlock;\nexport default SortBlock;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortBlock$observer\");\n$RefreshReg$(_c2, \"SortBlock\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/SortBlock.js"],"names":["observer","React","useState","useEffect","Button","ListGroup","Form","Row","Col","_","CSSTransition","TransitionGroup","Note","SortBlock","notes","searchVal","setSearchVal","sort","setSort","usNotes","setUsNotes","onSort","type","copyNotes","concat","sortType","orderedNotes","orderBy","e","target","value","filter","val","title","toLowerCase","includes","map","note","_id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAuCC,GAAvC,QAAkD,iBAAlD;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,SAAS,GAAGb,QAAQ,SAAE,QAAa;AAAA;;AAAA,MAAZ;AAACc,IAAAA;AAAD,GAAY;AAErC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,UAAU,CAACN,KAAD,CAAV,CADY,CAEZ;AACH,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;;AAKA,QAAMO,MAAM,GAAIC,IAAD,IAAU;AACrB,UAAMC,SAAS,GAAGT,KAAK,CAACU,MAAN,EAAlB;AACA,UAAMC,QAAQ,GAAGR,IAAI,KAAK,KAAT,GAAiB,MAAjB,GAA0B,KAA3C;;AACA,UAAMS,YAAY,GAAGjB,CAAC,CAACkB,OAAF,CAAUJ,SAAV,EAAqBD,IAArB,EAA2BG,QAA3B,CAArB;;AACAP,IAAAA,OAAO,CAACO,QAAD,CAAP;AACAL,IAAAA,UAAU,CAACM,YAAD,CAAV;AACH,GAND;;AAQA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,MAAP;AAAQ,QAAA,EAAE,EAAE,CAAZ;AAAe,QAAA,SAAS,EAAC,WAAzB;AAAA,gGAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,cAAjB;AACI,UAAA,SAAS,EAAC,aADd;AAEI,UAAA,OAAO,EAAE,MAAM;AACXL,YAAAA,MAAM,CAAC,OAAD,CAAN;AACH,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAUI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,cAAjB;AACI,UAAA,SAAS,EAAC,aADd;AAEI,UAAA,OAAO,EAAE,MAAM;AACXA,YAAAA,MAAM,CAAC,MAAD,CAAN;AACH,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAoBI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAgB,QAAA,SAAS,EAAC,MAA1B;AAAA,+BACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,WAAW,EAAC,gCAA1B;AACI,UAAA,QAAQ,EAAGO,CAAD,IAAQZ,YAAY,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AADlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA2BI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,WAA3B;AAAA,gBACKX,OAAO,CAACY,MAAR,CAAeC,GAAG,IAAI;AACnB,YAAIjB,SAAS,KAAK,EAAlB,EAAsB;AAClB,iBAAOiB,GAAP;AACH,SAFD,MAEO,IAAIA,GAAG,CAACC,KAAJ,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCpB,SAAS,CAACmB,WAAV,EAAjC,CAAJ,EAA+D;AAClE,iBAAOF,GAAP;AACH;AACJ,OANA,EAMEI,GANF,CAMMC,IAAI,iBACP,QAAC,aAAD;AACI,QAAA,UAAU,EAAE,MADhB;AAGI,QAAA,OAAO,EAAE,IAHb;AAAA,+BAKI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AALJ,SAESA,IAAI,CAACC,GAFd;AAAA;AAAA;AAAA;AAAA,cAPH;AADL;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH,CAlEyB,kCAA1B;MAAMzB,S;AAoEN,eAAeA,SAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\nimport React, {useState, useEffect} from 'react';\nimport { Button, ListGroup, Form, Row, Col } from 'react-bootstrap';\nimport _ from 'lodash';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Note from '../components/Note';\n\nconst SortBlock = observer( ({notes}) => {\n\n    const [searchVal, setSearchVal] = useState(\"\")\n    const [sort, setSort] = useState('asc')\n    const [usNotes, setUsNotes] = useState([])\n\n    useEffect(() => {\n        setUsNotes(notes)\n        // eslint-disable-next-line\n    }, [notes])\n\n    const onSort = (type) => {\n        const copyNotes = notes.concat()\n        const sortType = sort === 'asc' ? 'desc' : 'asc'\n        const orderedNotes = _.orderBy(copyNotes, type, sortType)\n        setSort(sortType)\n        setUsNotes(orderedNotes)\n    }\n\n    return (\n        <ListGroup>\n            <Row className=\"justify-content-between\">\n                <Col xs lg={4} className='mb-3 pt-1'>\n                    Сортировка\n                    <Button variant={'outline-dark'}\n                        className='ms-2 btn-sm'\n                        onClick={() => {\n                            onSort(\"title\")\n                        }}\n                    >\n                        по имени\n                    </Button>\n                    <Button variant={'outline-dark'}\n                        className='ms-2 btn-sm'\n                        onClick={() => {\n                            onSort(\"date\")\n                        }}\n                    >\n                        по дате\n                    </Button>\n                </Col>\n                <Col sm=\"auto\"  className='mb-3'>\n                    <Form.Control placeholder=\"поиск\"\n                        onChange={(e) => (setSearchVal(e.target.value))} \n                    />\n                </Col>\n            </Row>\n            <TransitionGroup className='note-list'>\n                {usNotes.filter(val => {\n                    if (searchVal === \"\") {\n                        return val\n                    } else if (val.title.toLowerCase().includes(searchVal.toLowerCase())) {\n                        return val\n                    }\n                }).map(note => (\n                    <CSSTransition \n                        classNames={'note'} \n                        key={note._id}\n                        timeout={1000}\n                    >  \n                        <Note notka={note} />\n                    </CSSTransition>)\n                )}\n            </TransitionGroup>\n        </ListGroup>\n    );\n});\n\nexport default SortBlock;"]},"metadata":{},"sourceType":"module"}