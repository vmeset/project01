{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/vmeset/project01/client/src/components/Forma.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Form } from 'react-bootstrap';\nimport { Context } from '..';\nimport { createNote } from '../http/noteAPI';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forma = observer(_c = _s(() => {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const [title, setTitle] = useState('');\n  const {\n    user\n  } = useContext(Context);\n  const {\n    note\n  } = useContext(Context);\n  const {\n    alert\n  } = useContext(Context);\n\n  const click = event => {\n    event.preventDefault();\n\n    if (title.trim()) {\n      try {\n        const newNote = {\n          title,\n          author: user.user.username,\n          type: pathname.slice(1) === \"\" ? \"todo\" : pathname.slice(1)\n        };\n        createNote(newNote).then(res => {\n          note.addNote(res.data);\n        }).then(() => {\n          alert.showAlert(\"Заметка успешно создана\", \"success\");\n        });\n        setTimeout(alert.hideAlert(), 1000);\n      } catch (e) {\n        alert.showAlert(e.message, \"danger\");\n      }\n\n      setTitle('');\n    } else {\n      alert.showAlert('Введите название заметки', \"warning\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pathname === \"/done\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Form, {\n      className: \"mt-2\",\n      onSubmit: click,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Add new note\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n}, \"cnAkxyAFWybMY8ENknBFR1UAHrs=\", false, function () {\n  return [useLocation];\n}));\n_c2 = Forma;\nexport default Forma;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Forma$observer\");\n$RefreshReg$(_c2, \"Forma\");","map":{"version":3,"sources":["/Users/vmeset/React/vmeset/project01/client/src/components/Forma.js"],"names":["React","useContext","useState","useLocation","observer","Form","Context","createNote","Forma","pathname","title","setTitle","user","note","alert","click","event","preventDefault","trim","newNote","author","username","type","slice","then","res","addNote","data","showAlert","setTimeout","hideAlert","e","message","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AAEA,MAAMC,KAAK,GAAGJ,QAAQ,SAAG,MAAM;AAAA;;AAE3B,QAAM;AAACK,IAAAA;AAAD,MAAaN,WAAW,EAA9B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAACU,IAAAA;AAAD,MAASX,UAAU,CAACK,OAAD,CAAzB;AACA,QAAM;AAACO,IAAAA;AAAD,MAASZ,UAAU,CAACK,OAAD,CAAzB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAUb,UAAU,CAACK,OAAD,CAA1B;;AAEA,QAAMS,KAAK,GAAGC,KAAK,IAAI;AACnBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIP,KAAK,CAACQ,IAAN,EAAJ,EAAkB;AACd,UAAI;AACA,cAAMC,OAAO,GAAG;AACZT,UAAAA,KADY;AAEZU,UAAAA,MAAM,EAAER,IAAI,CAACA,IAAL,CAAUS,QAFN;AAGZC,UAAAA,IAAI,EAAEb,QAAQ,CAACc,KAAT,CAAe,CAAf,MAAsB,EAAtB,GAA2B,MAA3B,GAAoCd,QAAQ,CAACc,KAAT,CAAe,CAAf;AAH9B,SAAhB;AAKAhB,QAAAA,UAAU,CAACY,OAAD,CAAV,CAAoBK,IAApB,CAAyBC,GAAG,IAAI;AAC5BZ,UAAAA,IAAI,CAACa,OAAL,CAAaD,GAAG,CAACE,IAAjB;AACH,SAFD,EAEGH,IAFH,CAEQ,MAAM;AACVV,UAAAA,KAAK,CAACc,SAAN,CAAgB,yBAAhB,EAA2C,SAA3C;AACH,SAJD;AAKAC,QAAAA,UAAU,CAACf,KAAK,CAACgB,SAAN,EAAD,EAAoB,IAApB,CAAV;AACH,OAZD,CAYE,OAAMC,CAAN,EAAS;AACPjB,QAAAA,KAAK,CAACc,SAAN,CAAgBG,CAAC,CAACC,OAAlB,EAA2B,QAA3B;AACH;;AACDrB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAjBD,MAiBO;AACHG,MAAAA,KAAK,CAACc,SAAN,CAAgB,0BAAhB,EAA4C,SAA5C;AACH;AACJ,GAtBD;;AAwBA,sBACI;AAAA,cACKnB,QAAQ,KAAK,OAAb,gBACK,qCADL,gBAEK,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEM,KAAjC;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AACI,QAAA,SAAS,EAAC,MADd;AAAA,+BAGI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,WAAW,EAAC,cAA1B;AACI,UAAA,KAAK,EAAEL,KADX;AAEI,UAAA,QAAQ,EAAEqB,CAAC,IAAIpB,QAAQ,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV;AAF3B;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHV,mBADJ;AAiBH,CAlDqB;AAAA,UAEC/B,WAFD;AAAA,GAAtB;MAAMK,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport {Form} from 'react-bootstrap'\n\nimport { Context } from '..';\nimport { createNote } from '../http/noteAPI';\n\nconst Forma = observer ( () => {\n\n    const {pathname} = useLocation()\n    const [title, setTitle] = useState('')\n\n    const {user} = useContext(Context)\n    const {note} = useContext(Context)\n    const {alert} = useContext(Context)\n\n    const click = event => {\n        event.preventDefault()\n        if (title.trim()) {\n            try {\n                const newNote = {\n                    title,\n                    author: user.user.username,\n                    type: pathname.slice(1) === \"\" ? \"todo\" : pathname.slice(1)\n                }\n                createNote(newNote).then(res => {\n                    note.addNote(res.data)\n                }).then(() => {\n                    alert.showAlert(\"Заметка успешно создана\", \"success\")\n                })\n                setTimeout(alert.hideAlert(), 1000)\n            } catch(e) {\n                alert.showAlert(e.message, \"danger\")\n            }\n            setTitle('')\n        } else {\n            alert.showAlert('Введите название заметки', \"warning\")\n        }\n    }\n\n    return (\n        <>\n            {pathname === \"/done\" \n                ? <></> \n                : <Form className=\"mt-2\" onSubmit={click}>\n                    <Form.Group \n                        className=\"mb-3\" \n                    >\n                        <Form.Control placeholder=\"Add new note\"\n                            value={title} \n                            onChange={e => setTitle(e.target.value)}\n                        />\n                    </Form.Group>\n                </Form>\n            }\n        </>\n    );\n});\n\nexport default Forma;"]},"metadata":{},"sourceType":"module"}