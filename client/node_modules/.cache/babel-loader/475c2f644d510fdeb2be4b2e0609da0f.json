{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport { Card, Container, Form, Button, Row } from 'react-bootstrap';\nimport { login, registration } from '../http/userAPI';\nimport { LOGIN_ROUTE, MAIN_ROUTE, REGISTRATION_ROUTE, TO_DO_ROUTE } from '../utils/consts';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from '..';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = observer(_c = _s(() => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation(); // const isLogin = location.pathname === LOGIN_ROUTE\n\n  const {\n    user\n  } = useContext(Context);\n  const {\n    alert\n  } = useContext(Context);\n\n  const click = async () => {\n    try {\n      let data;\n\n      if (location.pathname === LOGIN_ROUTE) {\n        data = await login(username, password).then(data => {\n          user.setUser(data);\n          user.setIsAuth(true);\n          navigate(TO_DO_ROUTE);\n        });\n      } else {\n        data = await registration(username, password).then(data => {\n          alert.showAlert(data, 'success');\n        });\n      }\n    } catch (e) {\n      alert(e.response.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      height: window.innerHeight - 54\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"m-auto\",\n        children: location.pathname === LOGIN_ROUTE ? \"Авторизация\" : \"Регистрация\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-2\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u0438\\u043D\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          value: password,\n          onChange: e => {\n            setpassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          value: passwordConfirm,\n          onChange: e => {\n            setpassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex justify-content-between\",\n          children: [location.pathname === LOGIN_ROUTE ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \", /*#__PURE__*/_jsxDEV(NavLink, {\n              to: REGISTRATION_ROUTE,\n              children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u0439\\u0441\\u044F!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0415\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \", /*#__PURE__*/_jsxDEV(NavLink, {\n              to: LOGIN_ROUTE,\n              children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u0443\\u0439\\u0441\\u044F!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-success\",\n              onClick: click,\n              children: location.pathname === LOGIN_ROUTE ? \"Войти\" : \"Регистрация\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}, \"ZbzL4BKsmnXszk+PiTIi1UN8xfI=\", false, function () {\n  return [useNavigate, useLocation];\n}));\n_c2 = Auth;\nexport default Auth;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auth$observer\");\n$RefreshReg$(_c2, \"Auth\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/pages/Auth.js"],"names":["React","useContext","useState","useNavigate","NavLink","Card","Container","Form","Button","Row","login","registration","LOGIN_ROUTE","MAIN_ROUTE","REGISTRATION_ROUTE","TO_DO_ROUTE","observer","Context","useLocation","Auth","username","setUsername","password","setpassword","passwordConfirm","setPasswordConfirm","navigate","location","user","alert","click","data","pathname","then","setUser","setIsAuth","showAlert","e","response","height","window","innerHeight","width","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {useNavigate, NavLink} from 'react-router-dom'\nimport { Card, Container, Form, Button, Row } from 'react-bootstrap';\nimport { login, registration } from '../http/userAPI';\nimport {LOGIN_ROUTE, MAIN_ROUTE, REGISTRATION_ROUTE, TO_DO_ROUTE} from '../utils/consts'\nimport {observer} from \"mobx-react-lite\";\nimport { Context } from '..';\nimport { useLocation } from 'react-router-dom';\n\n\nconst Auth = observer( () => {\n\n    const [username, setUsername] = useState(\"\")\n    const [password, setpassword] = useState(\"\")\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    // const isLogin = location.pathname === LOGIN_ROUTE\n\n    const {user} = useContext(Context)\n    const {alert} = useContext(Context)\n\n    const click = async () => {\n        try {\n            let data\n            if (location.pathname === LOGIN_ROUTE) {\n                data = await login(username, password).then(data => {\n                    user.setUser(data)\n                    user.setIsAuth(true)\n                    navigate(TO_DO_ROUTE)\n                })\n            } else {\n                data = await registration(username, password).then(data => {\n                    alert.showAlert(data, 'success')\n                })\n            }\n        } catch (e) {\n            alert(e.response.data)\n        }\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}}>\n                <h2 className=\"m-auto\">\n                    {location.pathname === LOGIN_ROUTE ? \"Авторизация\" : \"Регистрация\"}\n                </h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-2\"\n                        placeholder=\"Введите логин\"\n                        value={username}\n                        onChange={e => setUsername(e.target.value)}\n                    />\n                    <Form.Control\n                        placeholder=\"Введите пароль\"\n                        type=\"password\"\n                        value={password}\n                        onChange={e => {setpassword(e.target.value)}}\n                    />\n                    <Form.Control\n                        placeholder=\"Подтвердите пароль\"\n                        type=\"password\"\n                        value={passwordConfirm}\n                        onChange={e => {setpassword(e.target.value)}}\n                    />\n                    <Row className=\"d-flex justify-content-between\">\n                            { location.pathname === LOGIN_ROUTE \n                            ? <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>\n                                    Зарегистрируйся!\n                                </NavLink>\n                            </div>\n                            : <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>\n                                    Авторизируйся!\n                                </NavLink>\n                            </div>\n                            }\n                        <div>\n                            <Button\n                                variant={\"outline-success\"}\n                                onClick={click}\n                            >\n                                {location.pathname === LOGIN_ROUTE ? \"Войти\" : \"Регистрация\"}\n                            </Button>\n                        </div>\n                    </Row>\n                </Form>    \n            </Card>\n        </Container> \n    );\n});\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}